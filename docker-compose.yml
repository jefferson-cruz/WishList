version: '3.4'

networks:
  api:
  sqlserver:
  redis:
  elasticsearch:

services:
  wishlist.api:
    build: 
      context: ./
      dockerfile: ./WishList/Dockerfile
    restart: always
    environment:
      - DB_CONNECTION_STRING=Server=wishlist.sqlserver;Database=WishList;User=sa;Password=Docker@Password!123
      - ELASTIC_SEARCH_CONNECTION_STRING=http://wishlist.elasticsearch:9200
      - REDIS_CONNECTION_STRING=wishlist.redis, password=Redis2019!, resolveDns=true, connectTimeout=2000, allowAdmin=true, connectRetry=10, abortConnect=false
    depends_on:
      - wishlist.redis
      - wishlist.sqlserver
      - wishlist.elasticsearch
    ports:
      - "15000:80"
    networks:
      - api
      - sqlserver
      - redis
      - elasticsearch

  wishlist.elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.2.0
    environment:
      - discovery.type=single-node
      - http.cors.enabled=true
      - http.cors.allow-origin=*
      - http.cors.allow-headers=X-Requested-With,X-Auth-Token,Content-Type,Content-Length,Authorization 
      - http.cors.allow-credentials=true
    ports:
      - "9200:9200"
    restart: always
    networks:
      - elasticsearch

  wishlist.sqlserver:
    image: microsoft/mssql-server-linux:2017-latest
    environment:
      - SA_PASSWORD=Docker@Password!123
      - ACCEPT_EULA=Y
    ports:
      - "1433:1433"   
    networks:
      - sqlserver

  wishlist.redis:
    image: redis
    command: redis-server --requirepass Redis2019!
    ports:
      - "6379:6379"
    networks:
      - redis